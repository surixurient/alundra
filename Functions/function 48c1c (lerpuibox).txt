00048c1c: 27bdfff0 addiu r29,r29,0xfff0  function(unknownptr,lerper)
00048c24: 00000000 nop                  
00048c28: 14400003 bne r2,r0,0x00048c38 
00048c2c: 00803021 addu r6,r4,r0        
                                        if(lerper[8] == 0){
00048c30: 08012375 j 0x00048dd4         
00048c34: 24020001 addiu r2,r0,0x0001   
											return 1
										}
0x00048c38: 8ca40000 lw r4,0x0000(r5)   r4 = lerper[0] //tick progress
00048c3c: 8ca70004 lw r7,0x0004(r5)     r7 = lerper[4] //tick end
00048c40: 00000000 nop                  
00048c44: 10870032 beq r4,r7,0x00048d10 
00048c48: 00004821 addu r9,r0,r0        
                                        if(lerper[0] != lerper[4]) {
00048c4c: 84a20010 lh r2,0x0010(r5)     	r2 = lerper[10]
00048c50: 84a3000c lh r3,0x000c(r5)     	r3 = lerper[c]
00048c54: 00000000 nop                  
00048c58: 00431023 subu r2,r2,r3        	lerper[10] - lerper[c]
00048c5c: 00440018 mult r2, r4          	
00048c60: 00001012 mflo r2              	val = lerper[0] * (lerper[10] - lerper[c])
00048c64: 00000000 nop                  
00048c68: 00000000 nop                  
00048c6c: 0047001a div r2, r7           	
00048c70: 14e00002 bne r7,r0,0x00048c7c 	divided = val / lerper[4]
00048c74: 00000000 nop                  
											if(lerper[4] == 0)
00048c78: 0007000d unknown R type funct: 0d		//trigger debugger breakpoint

0x00048c7c: 2401ffff addiu r1,r0,0xffff 
00048c80: 14e10004 bne r7,r1,0x00048c94 
00048c84: 3c018000 lui r1, 0x8000       
											if(lerper[4] == -1
00048c88: 14410002 bne r2,r1,0x00048c94 
00048c8c: 00000000 nop                  
											&& val == 0x8000)
00048c90: 0006000d unknown R type funct: 0d 	//trigger debugger breakpoint

0x00048c94: 00001012 mflo r2            	//divided
00048c98: 00000000 nop                  
00048c9c: 00621821 addu r3,r3,r2        	
00048ca0: a4c30000 sh r3,0x0000(r6)     	unknownptr[0] = lerper[c]+divided  //save x
00048ca4: 84a20012 lh r2,0x0012(r5)     	r2 = lerper[12]
00048ca8: 84a4000e lh r4,0x000e(r5)     	r4 = lerper[e]
00048cac: 8ca30000 lw r3,0x0000(r5)     	r3 = lerper[0]
00048cb0: 00441023 subu r2,r2,r4        
00048cb4: 00430018 mult r2, r3          
00048cb8: 00001812 mflo r3              
00048cbc: 8ca20004 lw r2,0x0004(r5)     	r2 = lerper[4]
00048cc0: 00000000 nop                  
00048cc4: 0062001a div r3, r2           
00048cc8: 14400002 bne r2,r0,0x00048cd4 
00048ccc: 00000000 nop                  
											if(r2 == 0)
00048cd0: 0007000d unknown R type funct: 0d		//trigger debugger breakpoint

0x00048cd4: 2401ffff addiu r1,r0,0xffff 
00048cd8: 14410004 bne r2,r1,0x00048cec 
00048cdc: 3c018000 lui r1, 0x8000       
											if(r2 == r1)
00048ce0: 14610002 bne r3,r1,0x00048cec 
00048ce4: 00000000 nop                  
											if(r3 == r1)
00048ce8: 0006000d unknown R type funct: 0d		//trigger debugger breakpoint

0x00048cec: 00001012 mflo r2            
00048cf0: 00000000 nop                  
00048cf4: 00822021 addu r4,r4,r2        
00048cf8: a4c40002 sh r4,0x0002(r6)     	unknownptr[2] = r4//y
00048cfc: 8ca20000 lw r2,0x0000(r5)     
00048d00: 00000000 nop                  
00048d04: 24420001 addiu r2,r2,0x0001   
00048d08: 0801234e j 0x00048d38         
00048d0c: aca20000 sw r2,0x0000(r5)     	lerper[0]++
										}
                                        else
										{
0x00048d10: 94a20010 lhu r2,0x0010(r5)  	r2 = lerper[10]
00048d14: 00000000 nop                  
00048d18: a4c20000 sh r2,0x0000(r6)     	unknownptr[0] = r2//x
00048d1c: 94a20012 lhu r2,0x0012(r5)    	r2 = lerper[12]
00048d20: 00000000 nop                  
00048d24: a4c20002 sh r2,0x0002(r6)     	unknownptr[2] = r2//y
00048d28: 8ca20008 lw r2,0x0008(r5)     	
00048d2c: 00000000 nop                  
00048d30: 2442ffff addiu r2,r2,0xffff   
00048d34: aca20008 sw r2,0x0008(r5)     	lerper[8]--
										}
0x00048d38: 3c03801e lui r3, 0x801e     
00048d3c: 8c635cd8 lw r3,0x5cd8(r3)     r3 = *drawareaid
00048d40: 84c70002 lh r7,0x0002(r6)     r7 = unknownptr[2]//y
00048d44: 84c20006 lh r2,0x0006(r6)     r2 = unknownptr[6]//height
00048d48: 00031880 sll r3,r3,2          
00048d4c: 00661821 addu r3,r3,r6        
00048d50: 000210c0 sll r2,r2,3          
00048d54: 00471021 addu r2,r2,r7        
00048d58: 00e2102a slt r2,r7,r2         
00048d5c: 8c680008 lw r8,0x0008(r3)     r8 = unknownptr.cmdlists[drawareaid*4]
00048d60: 1040001c beq r2,r0,0x00048dd4 y = unknownptr.y
00048d64: 01201021 addu r2,r9,r0        
                                        while(y < unknownptr.height*8 + unknownptr.y)
                                        {

0x00048d68: 84c20004 lh r2,0x0004(r6)     r2 = unknownptr[4]//width
00048d6c: 84c40000 lh r4,0x0000(r6)       r4 = unknownptr[0]//x
00048d70: 000210c0 sll r2,r2,3            
00048d74: 00441021 addu r2,r2,r4          
00048d78: 0082102a slt r2,r4,r2           
00048d7c: 1040000d beq r2,r0,0x00048db4   x = unknownptr.x
00048d80: 00000000 nop                    
                                          
00048d84: 2505000a addiu r5,r8,0x000a     
										  while(x < unknownptr.width*8 + unknownptr.x){

0x00048d88: a4a4fffe sh r4,0xfffe(r5)       	r5[8] = x
00048d8c: a4a70000 sh r7,0x0000(r5)         	r5[a] = y
00048d90: 24a50014 addiu r5,r5,0x0014       
00048d94: 24840008 addiu r4,r4,0x0008       	x += 8
00048d98: 84c20004 lh r2,0x0004(r6)         	r2 = r6[4]//width
00048d9c: 84c30000 lh r3,0x0000(r6)         	r3 = r6[0]//x
00048da0: 000210c0 sll r2,r2,3              
00048da4: 00431021 addu r2,r2,r3            
00048da8: 0082102a slt r2,r4,r2             
00048dac: 1440fff6 bne r2,r0,0x00048d88     
00048db0: 25080014 addiu r8,r8,0x0014       
										  }while
										 
0x00048db4: 24e70008 addiu r7,r7,0x0008   y += 8
00048db8: 84c20006 lh r2,0x0006(r6)       r2 = r6[6]//height
00048dbc: 84c30002 lh r3,0x0002(r6)       r3 = r6[2]//y
00048dc0: 000210c0 sll r2,r2,3            
00048dc4: 00431021 addu r2,r2,r3          
00048dc8: 00e2102a slt r2,r7,r2           
00048dcc: 1440ffe6 bne r2,r0,0x00048d68   
00048dd0: 01201021 addu r2,r9,r0          
                                        }

0x00048dd4: 27bd0010 addiu r29,r29,0x0010
00048dd8: 03e00008 jr r31               return 0
00048ddc: 00000000 nop                  
