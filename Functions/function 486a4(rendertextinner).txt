000486a4: 27bdffa8 addiu r29,r29,0xffa8 void rendertextinner(linetext, outputbitmap, vramx, vramy, startx, starty, outputbitmapwidth, outputbitmapheight )
000486a8: afb60048 sw r22,0x0048(r29)   
000486ac: 97b60068 lhu r22,0x0068(r29)  x = startx//0
000486b0: afb50044 sw r21,0x0044(r29)   
000486b4: 8fb5006c lw r21,0x006c(r29)   starty//0
000486b8: afb20038 sw r18,0x0038(r29)   
000486bc: 8fb20070 lw r18,0x0070(r29)   //charbuffwidth
000486c0: afb00030 sw r16,0x0030(r29)   
000486c4: 00808021 addu r16,r4,r0       str = tempstr
000486c8: afb10034 sw r17,0x0034(r29)   
000486cc: 00a08821 addu r17,r5,r0       //outputbitmap
000486d0: afb3003c sw r19,0x003c(r29)   
000486d4: 00c09821 addu r19,r6,r0       //vramx
000486d8: afb40040 sw r20,0x0040(r29)   
000486dc: 00e0a021 addu r20,r7,r0       //vramy
000486e0: afb7004c sw r23,0x004c(r29)   
000486e4: 97b70074 lhu r23,0x0074(r29)  //charbuffheight
000486e8: afbe0050 sw r30,0x0050(r29)   
000486ec: 0280f021 addu r30,r20,r0      
000486f0: afbf0054 sw r31,0x0054(r29)   
000486f4: 0c01422a jal 0x000508a8       508a8(linetext)//
000486f8: a7b30018 sh r19,0x0018(r29)   
000486fc: 10400008 beq r2,r0,0x00048720 
00048700: 02002021 addu r4,r16,r0       
                                        if(r2 != 0)
00048704: 00132c00 sll r5,r19,16        
00048708: 00052c03 sra r5,r5,16         
0004870c: 00143400 sll r6,r20,16        
00048710: 0c014246 jal 0x00050918       50918(linetext,vramx,vramy)//
00048714: 00063403 sra r6,r6,16         
00048718: 08012298 j 0x00048a60         
0004871c: 00000000 nop                  
                                        return

0x00048720: 92040000 lbu r4,0x0000(r16) chr = *str
00048724: 00000000 nop                  
00048728: 108000cd beq r4,r0,0x00048a60 
0004872c: 0012a400 sll r20,r18,16       
                                        if(chr == 0)
											return
00048730: 00149403 sra r18,r20,16       
00048734: 00151400 sll r2,r21,16        //starty
00048738: 00029c03 sra r19,r2,16        
                                        do{//per character

0x0004873c: 00803021 addu r6,r4,r0        
00048740: 00006021 addu r12,r0,r0         y = 0
00048744: 00061880 sll r3,r6,2            
00048748: 00661821 addu r3,r3,r6          
0004874c: 00031880 sll r3,r3,2            
00048750: 3c01800a lui r1, 0x800a         
00048754: 00230821 addu r1,r1,r3          
00048758: 8c24b9d8 lw r4,0xb9d8(r1)       r4 = *fontcharinfos.sy[r3]//sourcey
0004875c: 3c01800a lui r1, 0x800a         
00048760: 00230821 addu r1,r1,r3          
00048764: 8c25b9d4 lw r5,0xb9d4(r1)       r5 = *fontcharinfos.sx[r3]//sourcex
00048768: 000421c0 sll r4,r4,7            
0004876c: 000517c2 srl r2,r5,31           
00048770: 00a21021 addu r2,r5,r2          
00048774: 00021043 sra r2,r2,1            
00048778: 24420040 addiu r2,r2,0x0040     
0004877c: 00822021 addu r4,r4,r2          fontstartdex = fontbitmapffset + sourcex/2 + sourcey*128
00048780: 3c02801e lui r2, 0x801e         
00048784: 2442dab0 addiu r2,r2,0xdab0     //fontbitmap
00048788: 00822021 addu r4,r4,r2          
0004878c: 3c01800a lui r1, 0x800a         
00048790: 00230821 addu r1,r1,r3          
00048794: 8c22b9d0 lw r2,0xb9d0(r1)       r2 = *0x9b9d0[r3]
00048798: 00000000 nop                    
0004879c: 18400096 blez r2, 0x000489f8    
000487a0: 30a50001 andi r5,r5,0x0001      
                                          if(r2 > 0)
000487a4: 00161400 sll r2,r22,16          tempx = x <<16 >>16 //why
000487a8: 00026c03 sra r13,r2,16          
000487ac: 30c200ff andi r2,r6,0x00ff      
                                          for(y=0; y < characterheight; y++{//per character height

0x000487b0: 00021880 sll r3,r2,2            
000487b4: 00621821 addu r3,r3,r2            
000487b8: 00031880 sll r3,r3,2              
000487bc: 3c01800a lui r1, 0x800a           
000487c0: 00230821 addu r1,r1,r3            
000487c4: 8c22b9cc lw r2,0xb9cc(r1)         kerningwidth = fontcharinfos[chr].kerning
000487c8: 00000000 nop                      
000487cc: 1840007e blez r2, 0x000489c8      
000487d0: 00005821 addu r11,r0,r0           
                                            if(r2 > 0)
000487d4: 026c5021 addu r10,r19,r12         //sy = starty+y
000487d8: 000c49c0 sll r9,r12,7             lineoffset = y*128
000487dc: 01a04021 addu r8,r13,r0           tempx
000487e0: 00a03821 addu r7,r5,r0            
                                            for(xdex = 0;xdex<i;xdex++){//per character width

0x000487e4: 29020100 slti r2,r8,0x0100        
000487e8: 10400077 beq r2,r0,0x000489c8       
000487ec: 31020001 andi r2,r8,0x0001          
                                              if(tempx >= 0x100)
												break
000487f0: 1040002a beq r2,r0,0x0004889c       
000487f4: 00000000 nop                        
                                              if(tempx & 1 != 0){//if its an odd (subbyte) x coordinate
000487f8: 30c300ff andi r3,r6,0x00ff          
000487fc: 00031080 sll r2,r3,2                
00048800: 00431021 addu r2,r2,r3              
00048804: 00021080 sll r2,r2,2                
00048808: 3c01800a lui r1, 0x800a             
0004880c: 00220821 addu r1,r1,r2              
00048810: 8c23b9dc lw r3,0xb9dc(r1)           	
00048814: 00000000 nop                        
00048818: 01431821 addu r3,r10,r3             
0004881c: 02430018 mult r18, r3               
00048820: 00001812 mflo r3                    //(sy + *fontcharinfos.y[r2]) * charbuffwidth
00048824: 000317c2 srl r2,r3,31               
00048828: 00621821 addu r3,r3,r2              
0004882c: 00031843 sra r3,r3,1                //(sy + *fontcharinfos.y[r2]) * charbuffwidth / 2
00048830: 000817c2 srl r2,r8,31               
00048834: 01021021 addu r2,r8,r2              
00048838: 00021043 sra r2,r2,1                //tempx / 2
0004883c: 00621821 addu r3,r3,r2              outputpos = ((sy + *fontcharinfos.y[r2]) * charbuffwidth / 2) + (tempx / 2)
00048840: 02231821 addu r3,r17,r3               
00048844: 90660000 lbu r6,0x0000(r3)          	existingnib = outputbitmap[outputpos]
00048848: 30e20001 andi r2,r7,0x0001          
0004884c: 10400009 beq r2,r0,0x00048874       
00048850: 30c3000f andi r3,r6,0x000f          	existingnib = existingnib & 0xf
												if(xdex & 1 != 0)
00048854: 000717c2 srl r2,r7,31               
00048858: 00e21021 addu r2,r7,r2              		
0004885c: 00021043 sra r2,r2,1                
00048860: 01221021 addu r2,r9,r2              
00048864: 00821021 addu r2,r4,r2              
00048868: 90420000 lbu r2,0x0000(r2)          		sourcenib = fontbitmap[fontstartdex + lineoffset + xdex/2]
0004886c: 0801224f j 0x0004893c               
00048870: 304200f0 andi r2,r2,0x00f0          		sourcenib = sourcenib & 0xf0
												else

0x00048874: 000717c2 srl r2,r7,31             
00048878: 00e21021 addu r2,r7,r2              
0004887c: 00021043 sra r2,r2,1                
00048880: 01221021 addu r2,r9,r2              
00048884: 00821021 addu r2,r4,r2              
00048888: 90420000 lbu r2,0x0000(r2)          		sourcenib = fontbitmap[fontstartdex + lineoffset + xdex/2]
0004888c: 00000000 nop                        
00048890: 3042000f andi r2,r2,0x000f          		
00048894: 0801224f j 0x0004893c               
00048898: 00021100 sll r2,r2,4                
													sourcenib = sourcenib & 0xf << 4
											 }
											 else {
0x0004889c: 92030000 lbu r3,0x0000(r16)       	chr = r16[0]
000488a0: 00000000 nop                        
000488a4: 00031080 sll r2,r3,2                
000488a8: 00431021 addu r2,r2,r3              
000488ac: 00021080 sll r2,r2,2                
000488b0: 3c01800a lui r1, 0x800a             
000488b4: 00220821 addu r1,r1,r2              
000488b8: 8c23b9dc lw r3,0xb9dc(r1)           	//r3 = *fontcharinfos.y[r2]
000488bc: 00000000 nop                        
000488c0: 01431821 addu r3,r10,r3             
000488c4: 02430018 mult r18, r3               
000488c8: 00001812 mflo r3                    
000488cc: 000317c2 srl r2,r3,31               
000488d0: 00621821 addu r3,r3,r2              
000488d4: 00031843 sra r3,r3,1                
000488d8: 000817c2 srl r2,r8,31               
000488dc: 01021021 addu r2,r8,r2              
000488e0: 00021043 sra r2,r2,1                
000488e4: 00621821 addu r3,r3,r2                outputpos = ((sy + *fontcharinfos.y[r2]) * charbuffwidth / 2) + (tempx / 2)
000488e8: 02231821 addu r3,r17,r3             
000488ec: 90660000 lbu r6,0x0000(r3)          	existingnib = outputbitmap[outputpos]
000488f0: 30e20001 andi r2,r7,0x0001          
000488f4: 10400009 beq r2,r0,0x0004891c       
000488f8: 30c300f0 andi r3,r6,0x00f0            existingnib = existingnib & 0xf0
												if(xdex & 1 != 0)
000488fc: 000717c2 srl r2,r7,31               
00048900: 00e21021 addu r2,r7,r2              
00048904: 00021043 sra r2,r2,1                
00048908: 01221021 addu r2,r9,r2              
0004890c: 00821021 addu r2,r4,r2              
00048910: 90420000 lbu r2,0x0000(r2)          		sourcenib = fontbitmap[fontstartdex + lineoffset + xdex/2]
00048914: 0801224f j 0x0004893c               
00048918: 00021102 srl r2,r2,4                		sourcenib = sourcenib >> 4
												else

0x0004891c: 000717c2 srl r2,r7,31             
00048920: 00e21021 addu r2,r7,r2              
00048924: 00021043 sra r2,r2,1                
00048928: 01221021 addu r2,r9,r2              
0004892c: 00821021 addu r2,r4,r2              
00048930: 90420000 lbu r2,0x0000(r2)          		sourcenib = fontbitmap[fontstartdex + lineoffset + xdex/2]
00048934: 00000000 nop                        
00048938: 3042000f andi r2,r2,0x000f          		sourcenib = sourcenib & 0xf
											}
0x0004893c: 00623025 or r6,r3,r2              //byte = curnib | sourcenib
00048940: 92030000 lbu r3,0x0000(r16)         chr = r16[0]
00048944: 00000000 nop                        
00048948: 00031080 sll r2,r3,2                
0004894c: 00431021 addu r2,r2,r3              
00048950: 00021080 sll r2,r2,2                
00048954: 3c01800a lui r1, 0x800a             
00048958: 00220821 addu r1,r1,r2              
0004895c: 8c23b9dc lw r3,0xb9dc(r1)           r3 = *0x9b9dc[r2]
00048960: 00000000 nop                        
00048964: 01431821 addu r3,r10,r3             
00048968: 02430018 mult r18, r3               
0004896c: 00001812 mflo r3                    
00048970: 000317c2 srl r2,r3,31               
00048974: 00621821 addu r3,r3,r2              
00048978: 00031843 sra r3,r3,1                
0004897c: 000817c2 srl r2,r8,31               
00048980: 01021021 addu r2,r8,r2              
00048984: 00021043 sra r2,r2,1                
00048988: 00621821 addu r3,r3,r2              
0004898c: 02231821 addu r3,r17,r3             
00048990: a0660000 sb r6,0x0000(r3)           outputbitmap[outputpos] = curnib | sourcenib
00048994: 25080001 addiu r8,r8,0x0001         tempx++
00048998: 92060000 lbu r6,0x0000(r16)         chr = r16[0]
0004899c: 00000000 nop                        
000489a0: 00061080 sll r2,r6,2                
000489a4: 00461021 addu r2,r2,r6              
000489a8: 00021080 sll r2,r2,2                
000489ac: 3c01800a lui r1, 0x800a             
000489b0: 00220821 addu r1,r1,r2              
000489b4: 8c22b9cc lw r2,0xb9cc(r1)           //r2 = *fontcharinfos.kerning[r2]
000489b8: 256b0001 addiu r11,r11,0x0001       
000489bc: 0162102a slt r2,r11,r2              
000489c0: 1440ff88 bne r2,r0,0x000487e4       
000489c4: 24e70001 addiu r7,r7,0x0001         
                                            }//per character width

0x000489c8: 92060000 lbu r6,0x0000(r16)     chr = r16[0]
000489cc: 00000000 nop                      
000489d0: 00061080 sll r2,r6,2              
000489d4: 00461021 addu r2,r2,r6            
000489d8: 00021080 sll r2,r2,2              
000489dc: 3c01800a lui r1, 0x800a           
000489e0: 00220821 addu r1,r1,r2            
000489e4: 8c22b9d0 lw r2,0xb9d0(r1)         r2 = *fontcharinfos.height[r2]
000489e8: 258c0001 addiu r12,r12,0x0001     
000489ec: 0182102a slt r2,r12,r2            
000489f0: 1440ff6f bne r2,r0,0x000487b0     
000489f4: 30c200ff andi r2,r6,0x00ff        
                                          }//per character height

0x000489f8: 97ae0018 lhu r14,0x0018(r29)  
000489fc: 00141403 sra r2,r20,16          
00048a00: a7be0012 sh r30,0x0012(r29)     rect.y = vramy
00048a04: 04410002 bgez r2, 0x00048a10    
00048a08: a7ae0010 sh r14,0x0010(r29)     rect.x = vramx
                                          if(r2 < 0)
00048a0c: 24420003 addiu r2,r2,0x0003     

0x00048a10: 27a40010 addiu r4,r29,0x0010  
00048a14: 02202821 addu r5,r17,r0         
00048a18: 00021083 sra r2,r2,2            
00048a1c: a7a20014 sh r2,0x0014(r29)      rect.width = r2
00048a20: 0c021d67 jal 0x0008759c         loadimage(rect, outputbitmap)//
00048a24: a7b70016 sh r23,0x0016(r29)     rect.height = r23
00048a28: 0c021cdd jal 0x00087374         drawsync()//
00048a2c: 00002021 addu r4,r0,r0          
00048a30: 92030000 lbu r3,0x0000(r16)     
00048a34: 26100001 addiu r16,r16,0x0001   
00048a38: 92040000 lbu r4,0x0000(r16)     
00048a3c: 00031080 sll r2,r3,2            
00048a40: 00431021 addu r2,r2,r3          
00048a44: 00021080 sll r2,r2,2            
00048a48: 3c01800a lui r1, 0x800a         
00048a4c: 00220821 addu r1,r1,r2          
00048a50: 8c23b9cc lw r3,0xb9cc(r1)       
00048a54: 26c20001 addiu r2,r22,0x0001    
00048a58: 1480ff38 bne r4,r0,0x0004873c   
00048a5c: 0043b021 addu r22,r2,r3         x += *fontcharinfos.kerning[chr*20] + 1
										  str++
										  chr = *str
                                        }//per character

0x00048a60: 8fbf0054 lw r31,0x0054(r29) 
00048a64: 8fbe0050 lw r30,0x0050(r29)   
00048a68: 8fb7004c lw r23,0x004c(r29)   
00048a6c: 8fb60048 lw r22,0x0048(r29)   
00048a70: 8fb50044 lw r21,0x0044(r29)   
00048a74: 8fb40040 lw r20,0x0040(r29)   
00048a78: 8fb3003c lw r19,0x003c(r29)   
00048a7c: 8fb20038 lw r18,0x0038(r29)   
00048a80: 8fb10034 lw r17,0x0034(r29)   
00048a84: 8fb00030 lw r16,0x0030(r29)   
00048a88: 27bd0058 addiu r29,r29,0x0058 
00048a8c: 03e00008 jr r31               
00048a90: 00000000 nop                  
