000378a0: 27bdffd8 addiu r29,r29,0xffd8 void collidewithmap()
000378a4: 00003021 addu r6,r0,r0        //0
000378a8: 00005021 addu r10,r0,r0       //0
000378ac: 3c0b2aaa lui r11, 0x2aaa      
000378b0: 356baaab ori r11,r11,0xaaab   //0x2aaaaaab
000378b4: 8c820114 lw r2,0x0114(r4)     
000378b8: 8c8301e4 lw r3,0x01e4(r4)     
000378bc: 3c0c8002 lui r12, 0x8002      
000378c0: 258c36d4 addiu r12,r12,0x36d4 //0x236d4
000378c4: 00431021 addu r2,r2,r3        
000378c8: 00021c03 sra r3,r2,16         varx = (r4.xpos+r4.xmod) >> 16
000378cc: afa30008 sw r3,0x0008(r29)    //varx
000378d0: afa30000 sw r3,0x0000(r29)    //varx
000378d4: 8c8301f0 lw r3,0x01f0(r4)     
000378d8: 00804021 addu r8,r4,r0        
000378dc: 00431021 addu r2,r2,r3        
000378e0: 00021403 sra r2,r2,16         varx2 = (r4.xpos+r4.xmod+r4.width) >> 16
000378e4: afa2000c sw r2,0x000c(r29)    //varx2
000378e8: afa20004 sw r2,0x0004(r29)    //varx2
000378ec: 8d020118 lw r2,0x0118(r8)     r2 = r8.ypos
000378f0: 8d0301e8 lw r3,0x01e8(r8)     r3 = r8.ymod
000378f4: 00004821 addu r9,r0,r0        
000378f8: 00431021 addu r2,r2,r3        
000378fc: 00021c03 sra r3,r2,16         vary = (ypos+ymod)>>16
00037900: afa30014 sw r3,0x0014(r29)    //vary
00037904: afa30010 sw r3,0x0010(r29)    //vary
00037908: 8d0301f4 lw r3,0x01f4(r8)     
0003790c: 03a03821 addu r7,r29,r0       //varx
00037910: 00431021 addu r2,r2,r3        
00037914: 00021403 sra r2,r2,16         vary2 = (ypos+ymod+depth)>>16
00037918: afa2001c sw r2,0x001c(r29)    //vary2
0003791c: afa20018 sw r2,0x0018(r29)    //vary2
                                        do{

0x00037920: 8ce20000 lw r2,0x0000(r7)     //varx
00037924: 00000000 nop                    
00037928: 00021040 sll r2,r2,1            //varx*2
0003792c: 3c018013 lui r1, 0x8013         
00037930: 00220821 addu r1,r1,r2          
00037934: 84247730 lh r4,0x7730(r1)       tilex = 0x137730+varx*2 //positionx/24 //division table for divided by 24
00037938: 00000000 nop                    
0003793c: 18800009 blez r4, 0x00037964    
00037940: 00801021 addu r2,r4,r0          
                                          if(tilex > 0)
00037944: 00401821 addu r3,r2,r0          
00037948: 28820034 slti r2,r4,0x0034      
0003794c: 14400003 bne r2,r0,0x0003795c   
00037950: 00031400 sll r2,r3,16           
                                          if(tilex >= 0x34)
00037954: 24030033 addiu r3,r0,0x0033     	tilex = 0x33
00037958: 00031400 sll r2,r3,16           

0x0003795c: 0800de5a j 0x00037968           tilex = (tilex << 16) >> 16
00037960: 00022403 sra r4,r2,16           	
                                          else {

0x00037964: 00002021 addu r4,r0,r0        	tilex = 0
										 }
0x00037968: 8ce20010 lw r2,0x0010(r7)     //vary
0003796c: 00000000 nop                    
00037970: 00021103 sra r2,r2,4            //tiley = vary>>4 //positiony/16
00037974: 18400006 blez r2, 0x00037990    
00037978: 00401821 addu r3,r2,r0          
                                          if(tiley > 0){
0003797c: 2862003c slti r2,r3,0x003c      
00037980: 14400005 bne r2,r0,0x00037998   
00037984: 00031040 sll r2,r3,1            
											if(tiley >= 0x3c)
00037988: 0800de65 j 0x00037994           
0003798c: 2403003b addiu r3,r0,0x003b     		tiley = 0x3b
										  }
										  else{

0x00037990: 00001821 addu r3,r0,r0        	tiley = 0
										  }
0x00037994: 00031040 sll r2,r3,1          //tiley

0x00037998: 00431021 addu r2,r2,r3        
0003799c: 00021080 sll r2,r2,2            
000379a0: 00431021 addu r2,r2,r3          
000379a4: 00021140 sll r2,r2,5            
000379a8: 3c03801b lui r3, 0x801b         
000379ac: 8c63c464 lw r3,0xc464(r3)       r3 = *maptilesptr
000379b0: 24420604 addiu r2,r2,0x0604     
000379b4: 00621821 addu r3,r3,r2          
000379b8: 000410c0 sll r2,r4,3            
000379bc: 00621821 addu r3,r3,r2          tileptr = maptilesaddr + 0x604 + tilex*8 + (tiley* 8 * 52)
000379c0: ad030148 sw r3,0x0148(r8)       r8.maptiletl = tileptr
000379c4: 90620002 lbu r2,0x0002(r3)      slope = tileptr[2]//slope
000379c8: 90650003 lbu r5,0x0003(r3)      height = tileptr[3]//height
000379cc: 30430003 andi r3,r2,0x0003      
000379d0: 1060004e beq r3,r0,0x00037b0c   
000379d4: 24a2ffff addiu r2,r5,0xffff     
                                          if(slope & 0x3 != 0) {
000379d8: 00022900 sll r5,r2,4            	height *= 16
000379dc: 24020002 addiu r2,r0,0x0002     
000379e0: 1062001b beq r3,r2,0x00037a50   
000379e4: 28620003 slti r2,r3,0x0003      
											if(slope & 0x3 != 2) {
000379e8: 10400005 beq r2,r0,0x00037a00   
000379ec: 24020001 addiu r2,r0,0x0001     
												if(slope & 0x3 < 3)
000379f0: 10620008 beq r3,r2,0x00037a14   
000379f4: 30c20006 andi r2,r6,0x0006      
												if(slope & 0x3 != 1)
000379f8: 0800dec5 j 0x00037b14           
000379fc: 00052c00 sll r5,r5,16           
												else

0x00037a00: 24020003 addiu r2,r0,0x0003   
00037a04: 1062002b beq r3,r2,0x00037ab4   
00037a08: 30c20003 andi r2,r6,0x0003      
												if(r3 != r2)
00037a0c: 0800dec5 j 0x00037b14           
00037a10: 00052c00 sll r5,r5,16           
												else

0x00037a14: 10400003 beq r2,r0,0x00037a24  
00037a18: 013d1021 addu r2,r9,r29         
												if(r2 != 0)
00037a1c: 0800de92 j 0x00037a48           
00037a20: 24a50010 addiu r5,r5,0x0010     
												else

0x00037a24: 8c430010 lw r3,0x0010(r2)     		r3 = r2[10]
00037a28: 24a40010 addiu r4,r5,0x0010     
00037a2c: 04610002 bgez r3, 0x00037a38    
00037a30: 00601021 addu r2,r3,r0          
												if(r3 < 0)
00037a34: 2462000f addiu r2,r3,0x000f     

0x00037a38: 00021103 sra r2,r2,4          
00037a3c: 00021100 sll r2,r2,4            
00037a40: 00621023 subu r2,r3,r2          
00037a44: 00822823 subu r5,r4,r2          

0x00037a48: 0800dec4 j 0x00037b10         
00037a4c: 34c60001 ori r6,r6,0x0001       
											}
											else
											{
0x00037a50: 30c20005 andi r2,r6,0x0005    
00037a54: 10400003 beq r2,r0,0x00037a64   
00037a58: 013d1021 addu r2,r9,r29         
											if(r2 != 0)
00037a5c: 0800deab j 0x00037aac           
00037a60: 24a50010 addiu r5,r5,0x0010     
											else

0x00037a64: 8c440000 lw r4,0x0000(r2)     	r4 = r2[0]
00037a68: 00000000 nop                    
00037a6c: 008b0018 mult r4, r11           
00037a70: 000417c3 sra r2,r4,31           
00037a74: 00006810 mfhi r13               
00037a78: 000d1883 sra r3,r13,2           //here we have x / 24, a tilex
00037a7c: 00621823 subu r3,r3,r2          
00037a80: 00031040 sll r2,r3,1            
00037a84: 00431021 addu r2,r2,r3          
00037a88: 000210c0 sll r2,r2,3            //here we have it * 24, a pixel pos without the remainder
00037a8c: 00822023 subu r4,r4,r2          //get remainder (num pixels into the tile)
00037a90: 24020017 addiu r2,r0,0x0017     
00037a94: 00441023 subu r2,r2,r4          //invert for this slope
00037a98: 00021080 sll r2,r2,2            //do a table lookup to get the height based on this distance into the tile
00037a9c: 004c1021 addu r2,r2,r12         
00037aa0: 8c420000 lw r2,0x0000(r2)       	r2 = r2[0]
00037aa4: 00000000 nop                    
00037aa8: 00a22821 addu r5,r5,r2          
											}
0x00037aac: 0800dec4 j 0x00037b10         
00037ab0: 34c60002 ori r6,r6,0x0002       
											else

0x00037ab4: 10400003 beq r2,r0,0x00037ac4  
00037ab8: 013d1021 addu r2,r9,r29         
											if(r2 != 0)
00037abc: 0800dec1 j 0x00037b04           
00037ac0: 24a50010 addiu r5,r5,0x0010     
											else

0x00037ac4: 8c440000 lw r4,0x0000(r2)     	r4 = r2[0]
00037ac8: 00000000 nop                    
00037acc: 008b0018 mult r4, r11           
00037ad0: 000417c3 sra r2,r4,31           
00037ad4: 00006810 mfhi r13               
00037ad8: 000d1883 sra r3,r13,2           
00037adc: 00621823 subu r3,r3,r2          
00037ae0: 00031040 sll r2,r3,1            
00037ae4: 00431021 addu r2,r2,r3          
00037ae8: 000210c0 sll r2,r2,3            
00037aec: 00822023 subu r4,r4,r2          
00037af0: 00042080 sll r4,r4,2            
00037af4: 008c2021 addu r4,r4,r12         
00037af8: 8c820000 lw r2,0x0000(r4)       	r2 = r4[0]
00037afc: 00000000 nop                    
00037b00: 00a22821 addu r5,r5,r2          

0x00037b04: 0800dec4 j 0x00037b10         
00037b08: 34c60004 ori r6,r6,0x0004       
                                          }
										  else {//slope & 0x3 == 0

0x00037b0c: 00052900 sll r5,r5,4          	height *= 16
										}
0x00037b10: 00052c00 sll r5,r5,16        height = height << 16 

0x00037b14: 0145102a slt r2,r10,r5        
00037b18: 10400002 beq r2,r0,0x00037b24   
00037b1c: ad050158 sw r5,0x0158(r8)       r8.mapheighttl = height
                                          if(highest < height)
00037b20: 00a05021 addu r10,r5,r0         	highest = height

0x00037b24: 25080004 addiu r8,r8,0x0004   
00037b28: 24e70004 addiu r7,r7,0x0004     
00037b2c: 27a20010 addiu r2,r29,0x0010    
00037b30: 00e2102a slt r2,r7,r2           
00037b34: 1440ff7a bne r2,r0,0x00037920   
00037b38: 25290004 addiu r9,r9,0x0004     
                                        }//for 0 to 3  mapheight and maptile arrays.  tl tr bl br
00037b3c: 01401021 addu r2,r10,r0       return highest;
00037b40: 27bd0028 addiu r29,r29,0x0028 
00037b44: 03e00008 jr r31               
00037b48: 00000000 nop                  
